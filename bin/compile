#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Clean up leaking environment
unset GIT_DIR

# Functions
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function set-env (){
  echo "export $1=$2" >> $PROFILE_PATH
}

function set-default-env (){
  echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
}

# Display some information
echo "Setting environment variables..." | indent

set-env REPORTED_STACK "$STACK"
set-env REPORTED_BUILD_DIR "$1"
set-env REPORTED_CACHE_DIR "$2"
set-env REPORTED_ENV_DIR "$3"

# Print out environment variables
echo "Reported STACK: $STACK"
echo "Reported BUILD_DIR: $1"
echo "Reported CACHE_DIR: $2"
echo "Reported ENV_DIR: $3"

# Setup environment variables
set-env GEOS_LIBRARY_PATH "$APP_VENDOR/lib"
set-env GDAL_LIBRARY_PATH "$APP_VENDOR/lib"
set-env PROJ4_LIBRARY_PATH "$APP_VENDOR/lib"
set-env GDAL_DATA "$APP_VENDOR/share/gdal"

# Bundle workaround
mkdir -p $BUILD_DIR/.bundle
if [ -f $CACHE_DIR/.bundle/config ]; then
  rm $CACHE_DIR/.bundle/config
fi
echo "---
BUNDLE_BUILD__RGEO: "--with-opt-dir=$BUILD_DIR/$TARGET_VENDOR_DIR --with-geos-config=$BUILD_DIR/$TARGET_VENDOR_DIR/bin/geos-config"
BUNDLE_FROZEN: '1'
BUNDLE_PATH: vendor/bundle
BUNDLE_BIN: vendor/bundle/bin
BUNDLE_WITHOUT: development:test
BUNDLE_DISABLE_SHARED_GEMS: '1'
" > $BUILD_DIR/.bundle/config

set-default-env LIBRARY_PATH "$APP_VENDOR/lib"
set-default-env LD_LIBRARY_PATH "$APP_VENDOR/lib"
set-default-env CPATH "$APP_VENDOR/include"
set-default-env PATH "$APP_VENDOR/bin"

echo "-----> Vendoring geo libraries done"
